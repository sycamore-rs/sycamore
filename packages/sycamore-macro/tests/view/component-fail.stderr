error: expected either `(` or `{` after element tag
  --> tests/view/component-fail.rs:34:59
   |
34 |         let _: View<G> = view! { cx, PropsComponent { prop: "123" } }; // Legacy syntax.
   |                                                           ^

error[E0425]: cannot find value `UnknownComponent` in this scope
  --> tests/view/component-fail.rs:25:38
   |
25 |         let _: View<G> = view! { cx, UnknownComponent() };
   |                                      ^^^^^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `UnknownComponent` in this scope
  --> tests/view/component-fail.rs:26:38
   |
26 |         let _: View<G> = view! { cx, UnknownComponent {} };
   |                                      ^^^^^^^^^^^^^^^^ not found in this scope

error[E0599]: no method named `prop` found for struct `UnitBuilder` in the current scope
  --> tests/view/component-fail.rs:29:48
   |
29 |         let _: View<G> = view! { cx, Component(prop=1) };
   |                                                ^^^^ method not found in `UnitBuilder`

warning: use of deprecated associated function `PropsBuilder::<((),)>::build`: Missing required field prop
  --> tests/view/component-fail.rs:31:26
   |
31 |         let _: View<G> = view! { cx, PropsComponent() };
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default
   = note: this warning originates in the macro `$crate::view_with_elements` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 1 argument but 0 arguments were supplied
  --> tests/view/component-fail.rs:31:26
   |
31 |         let _: View<G> = view! { cx, PropsComponent() };
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an argument of type `PropsBuilder_Error_Missing_required_field_prop` is missing
   |
note: associated function defined here
  --> tests/view/component-fail.rs:3:10
   |
3  | #[derive(Props)]
   |          -^^^^
   = note: this error originates in the macro `$crate::view_with_elements` (in Nightly builds, run with -Z macro-backtrace for more info)
help: provide the argument
  --> $WORKSPACE/packages/sycamore/src/web/mod.rs
   |
   |         $crate::view_with_elements!($crate::web::html, $($t)*)(/* PropsBuilder_Error_Missing_required_field_prop */)
   |

warning: use of deprecated associated function `PropsBuilder::<((),)>::build`: Missing required field prop
  --> tests/view/component-fail.rs:32:26
   |
32 |         let _: View<G> = view! { cx, PropsComponent {} };
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this warning originates in the macro `$crate::view_with_elements` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0061]: this function takes 1 argument but 0 arguments were supplied
  --> tests/view/component-fail.rs:32:26
   |
32 |         let _: View<G> = view! { cx, PropsComponent {} };
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ an argument of type `PropsBuilder_Error_Missing_required_field_prop` is missing
   |
note: associated function defined here
  --> tests/view/component-fail.rs:3:10
   |
3  | #[derive(Props)]
   |          -^^^^
   = note: this error originates in the macro `$crate::view_with_elements` (in Nightly builds, run with -Z macro-backtrace for more info)
help: provide the argument
  --> $WORKSPACE/packages/sycamore/src/web/mod.rs
   |
   |         $crate::view_with_elements!($crate::web::html, $($t)*)(/* PropsBuilder_Error_Missing_required_field_prop */)
   |

error[E0308]: mismatched types
  --> tests/view/component-fail.rs:33:58
   |
33 |         let _: View<G> = view! { cx, PropsComponent(prop=123) };
   |                                                     ---- ^^^ expected `&str`, found integer
   |                                                     |
   |                                                     arguments to this function are incorrect
   |
note: associated function defined here
  --> tests/view/component-fail.rs:5:5
   |
3  | #[derive(Props)]
   |          -----
4  | pub struct Props {
5  |     prop: &'static str,
   |     ^^^^
