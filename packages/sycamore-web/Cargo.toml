[package]
name = "sycamore-web"
categories = ["gui", "wasm", "web-programming"]
description = "proc-macro crate for Sycamore"
edition = "2021"
homepage = "https://github.com/sycamore-rs/sycamore"
keywords = ["wasm", "gui", "reactive"]
license = "MIT"
readme = "../../README.md"
repository = "https://github.com/sycamore-rs/sycamore"
version.workspace = true

[dependencies]
futures = { version = "0.3.30", optional = true }
js-sys = "0.3.67"
paste = "1.0.14"
once_cell = "1.19.0"
smallvec = { version = "1.13.2", features = ["union", "const_generics"] }
sycamore-core = { path = "../sycamore-core", version = "0.9.0-beta.3" }
sycamore-futures = { path = "../sycamore-futures", version = "0.9.0-beta.3", optional = true }
sycamore-macro = { path = "../sycamore-macro", version = "0.9.0-beta.3" }
sycamore-reactive = { path = "../sycamore-reactive", version = "0.9.0-beta.3" }
wasm-bindgen = "0.2.92"
web-sys = { version = "0.3.69", features = [
	"Comment",
	"console",
	"Node",
	"NodeList",
	"Window",
	"Document",
	"DocumentFragment",
	"Element",
	"EventListener",
	"HtmlElement",
	"Text",

	# Event types
	"Event",
	"AnimationEvent",
	"BeforeUnloadEvent",
	"CompositionEvent",
	"DeviceMotionEvent",
	"DeviceOrientationEvent",
	"DragEvent",
	"ErrorEvent",
	"Event",
	"FocusEvent",
	"GamepadEvent",
	"HashChangeEvent",
	"InputEvent",
	"KeyboardEvent",
	"MessageEvent",
	"MouseEvent",
	"PageTransitionEvent",
	"PointerEvent",
	"PopStateEvent",
	"ProgressEvent",
	"PromiseRejectionEvent",
	"SecurityPolicyViolationEvent",
	"StorageEvent",
	"SubmitEvent",
	"TouchEvent",
	"TransitionEvent",
	"WheelEvent",
] }

[target.'cfg(any(not(target_arch = "wasm32"), syacmore_force_ssr))'.dependencies]
html-escape = "0.2.13"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { version = "1.22.0", features = ["rt", "macros"] }

[dev-dependencies]
sycamore = { path = "../sycamore" }
expect-test = "1.4.1"

[features]
default = ["wasm-bindgen-interning"]
hydrate = []
suspense = ["dep:sycamore-futures", "dep:futures"]
wasm-bindgen-interning = ["wasm-bindgen/enable-interning"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
	"cfg(sycamore_force_ssr)",
	"cfg(rust_analyzer)",
] }
