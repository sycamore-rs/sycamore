name: JS Framework Benchmark

on:
  pull_request:
    branches: [master]
    types: [labeled, synchronize]

jobs:
  bench:
    name: Bench
    runs-on: ubuntu-latest

    if: >-
      (github.event.action == 'labeled' && github.event.label.name == 'performance') ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'performance'))

    env:
      MSG_FOOTER: |
        
        Workflow: [${{ github.run_id }}](/${{ github.repository }}/actions/runs/${{ github.run_id }})
        *Adding new commits will generate a new report*

    steps:
      - name: Post comment
        uses: jungwinter/comment@v1
        id: create_comment
        with:
          type: create
          body: |
            Started a benchmark for this pull request.
            This comment will be updated with the results.
            ${{ env.MSG_FOOTER }}
          issue_number: ${{ github.event.number }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2
        with:
          repository: sycamore-rs/js-framework-benchmark

      - name: Configure benchmark
        run: |
          search="{git = \"https://github.com/sycamore-rs/sycamore\", branch = \"master\"}"
          replace="{git = \"${{ github.event.pull_request.head.repo.html_url }}\", branch = \"${{ github.event.pull_request.head.ref }}\"}"
          input=$(cat frameworks/keyed/sycamore/Cargo.toml)
          output=${input//"$search"/"$replace"}
          if [[ "$input" == "$output" ]]; then
            echo "ERROR: failed to configure Cargo.toml"
            exit 1
          fi
          echo "$output" > frameworks/keyed/sycamore/Cargo.toml
          echo "$output"

      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@master

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install wasm-bindgen
        run: >
          wget https://github.com/rustwasm/wasm-bindgen/releases/download/0.2.74/wasm-bindgen-0.2.74-x86_64-unknown-linux-musl.tar.gz &&
          tar -xf wasm-bindgen-0.2.74-x86_64-unknown-linux-musl.tar.gz &&
          sudo mv wasm-bindgen-0.2.74-x86_64-unknown-linux-musl/wasm-bindgen /usr/bin/

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: npm Install
        run: |
          npm install
          (cd webdriver-ts && npm install)
          (cd webdriver-ts-results && npm install)

      - name: Start Server
        run: npm start &

      - name: Build
        run: |
          npm run build-prod
          (cd webdriver-ts && npm run build-prod)
          echo "Build Done"
        shell: bash {0} # Do not fail fast. webdriver-ts current spits out errors for tsc.

      - name: Benchmark
        run: npm run bench -- --headless

      - name: Results
        run: npm run results

      - name: Log results
        run: |
          msg=$(cd results_diff && cargo run)
          echo "$msg"

      - name: Run results_diff
        run: cd results_diff && cargo run &> bench.txt

      - name: Read file contents
        id: read_bench
        uses: andstor/file-reader-action@v1
        with:
          path: results_diff/bench.txt

      - name: Post results
        uses: jungwinter/comment@v1
        with:
          type: edit
          body: |
            ${{ steps.read_bench.outputs.contents }}
            ${{ env.MSG_FOOTER }}
          comment_id: ${{ steps.create_comment.outputs.id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Post failure
        if: ${{ failure() }}
        uses: jungwinter/comment@v1
        with:
          type: edit
          body: |
            **The benchmark failed to complete.**
            Please see the workflow for more details.
            ${{ env.MSG_FOOTER }}
          comment_id: ${{ steps.create_comment.outputs.id }}
          token: ${{ secrets.GITHUB_TOKEN }}
