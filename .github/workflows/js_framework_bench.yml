name: JS Framework Benchmark

on:
  pull_request:
    branches: [master]
    types: [labeled, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    if: >-
      (github.event.action == 'labeled' && github.event.label.name == 'performance') ||
      (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'performance'))

    steps:
      - uses: actions/checkout@v2
        with:
          repository: sycamore-rs/js-framework-benchmark

      - name: Configure benchmark
        run: |
          search="{git = \"https://github.com/sycamore-rs/sycamore\", branch = \"master\"}"
          replace="{git = \"${{ github.event.pull_request.head.repo.html_url }}\", branch = \"${{ github.event.pull_request.head.ref }}\"}"
          input=$(cat frameworks/keyed/sycamore/Cargo.toml)
          output=${input//"$search"/"$replace"}
          if [[ "$input" == "$output" ]]; then
            echo "ERROR: failed to configure Cargo.toml"
            exit 1
          fi
          echo "$output" > frameworks/keyed/sycamore/Cargo.toml
          echo "$output"

      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@master

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install wasm-bindgen
        run: >
          wget https://github.com/rustwasm/wasm-bindgen/releases/download/0.2.74/wasm-bindgen-0.2.74-x86_64-unknown-linux-musl.tar.gz &&
          tar -xf wasm-bindgen-0.2.74-x86_64-unknown-linux-musl.tar.gz &&
          sudo mv wasm-bindgen-0.2.74-x86_64-unknown-linux-musl/wasm-bindgen /usr/bin/

      - uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: npm Install
        run: |
          npm install
          (cd webdriver-ts && npm install)
          (cd webdriver-ts-results && npm install)

      - name: Start Server
        run: npm start &

      - name: Build
        run: |
          npm run build-prod
          (cd webdriver-ts && npm run build-prod)

      - name: Benchmark
        run: npm run bench -- --headless
        if: ${{ always() }}

      - name: Results
        run: npm run results
        if: ${{ always() }}

      - name: Log results
        run: |
          msg=$(cd results_diff && cargo run)
          echo "$msg"
        if: ${{ always() }}
